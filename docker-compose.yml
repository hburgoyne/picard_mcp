version: '3.8'

services:
  web:
    build: .
    command: >
      bash -c "python manage.py migrate && \
               python manage.py createsu && \
               gunicorn --bind 0.0.0.0:8000 mcp_server.wsgi:application"
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - DJANGO_SETTINGS_MODULE=mcp_server.settings
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3

  db:
    image: ankane/pgvector:v0.5.1
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-mcp_db}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-mcp_db}"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    command: redis-server --requirepass ${REDIS_PASSWORD:-redispass}
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  celery:
    build: .
    command: >
      bash -c "celery -A mcp_server worker \
               --loglevel=info \
               --concurrency=4"
    volumes:
      - .:/code
    env_file:
      - .env
    environment:
      - DJANGO_SETTINGS_MODULE=mcp_server.settings
      - PYTHONUNBUFFERED=1
    depends_on:
      - redis
      - db

  celery-beat:
    build: .
    command: >
      bash -c "celery -A mcp_server beat \
               --loglevel=info \
               --scheduler django_celery_beat.schedulers:DatabaseScheduler"
    volumes:
      - .:/code
    env_file:
      - .env
    environment:
      - DJANGO_SETTINGS_MODULE=mcp_server.settings
      - PYTHONUNBUFFERED=1
    depends_on:
      - redis
      - db

volumes:
  postgres_data:
  redis_data:
