"""fresh_database_setup

Revision ID: 729358aac188
Revises: 
Create Date: 2025-05-21 16:56:02.398506

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import pgvector.sqlalchemy

# revision identifiers, used by Alembic.
revision = '729358aac188'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('oauth_clients',
    sa.Column('client_id', sa.UUID(), nullable=True),
    sa.Column('client_secret', sa.String(), nullable=False),
    sa.Column('client_name', sa.String(), nullable=False),
    sa.Column('redirect_uris', postgresql.ARRAY(sa.String()), nullable=False),
    sa.Column('scopes', postgresql.ARRAY(sa.String()), nullable=False),
    sa.Column('is_confidential', sa.Boolean(), nullable=True),
    sa.Column('grant_types', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('response_types', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('client_uri', sa.String(), nullable=True),
    sa.Column('logo_uri', sa.String(), nullable=True),
    sa.Column('tos_uri', sa.String(), nullable=True),
    sa.Column('policy_uri', sa.String(), nullable=True),
    sa.Column('jwks_uri', sa.String(), nullable=True),
    sa.Column('software_id', sa.String(), nullable=True),
    sa.Column('software_version', sa.String(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_oauth_clients_client_id'), 'oauth_clients', ['client_id'], unique=True)
    op.create_index(op.f('ix_oauth_clients_id'), 'oauth_clients', ['id'], unique=False)
    op.create_table('users',
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_superuser', sa.Boolean(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('authorization_codes',
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('client_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('redirect_uri', sa.String(), nullable=False),
    sa.Column('scope', sa.String(), nullable=False),
    sa.Column('expires_at', sa.String(), nullable=False),
    sa.Column('code_challenge', sa.String(), nullable=True),
    sa.Column('code_challenge_method', sa.String(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['oauth_clients.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_authorization_codes_code'), 'authorization_codes', ['code'], unique=False)
    op.create_index(op.f('ix_authorization_codes_id'), 'authorization_codes', ['id'], unique=False)
    op.create_table('memories',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('text', sa.Text(), nullable=False),
    sa.Column('encrypted_text', sa.Text(), nullable=True),
    sa.Column('permission', sa.String(), nullable=False),
    sa.Column('embedding', pgvector.sqlalchemy.Vector(dim=1536), nullable=True),
    sa.Column('expiration_date', sa.DateTime(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_memories_id'), 'memories', ['id'], unique=False)
    op.create_table('tokens',
    sa.Column('access_token', sa.String(), nullable=False),
    sa.Column('refresh_token', sa.String(), nullable=False),
    sa.Column('client_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('scope', sa.String(), nullable=False),
    sa.Column('access_token_expires_at', sa.String(), nullable=False),
    sa.Column('refresh_token_expires_at', sa.String(), nullable=False),
    sa.Column('is_revoked', sa.Boolean(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['oauth_clients.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tokens_access_token'), 'tokens', ['access_token'], unique=False)
    op.create_index(op.f('ix_tokens_id'), 'tokens', ['id'], unique=False)
    op.create_index(op.f('ix_tokens_refresh_token'), 'tokens', ['refresh_token'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_tokens_refresh_token'), table_name='tokens')
    op.drop_index(op.f('ix_tokens_id'), table_name='tokens')
    op.drop_index(op.f('ix_tokens_access_token'), table_name='tokens')
    op.drop_table('tokens')
    op.drop_index(op.f('ix_memories_id'), table_name='memories')
    op.drop_table('memories')
    op.drop_index(op.f('ix_authorization_codes_id'), table_name='authorization_codes')
    op.drop_index(op.f('ix_authorization_codes_code'), table_name='authorization_codes')
    op.drop_table('authorization_codes')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_oauth_clients_id'), table_name='oauth_clients')
    op.drop_index(op.f('ix_oauth_clients_client_id'), table_name='oauth_clients')
    op.drop_table('oauth_clients')
    # ### end Alembic commands ###
